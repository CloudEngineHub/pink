name: CI

on:
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]
    workflow_dispatch:

jobs:
    coverage:
        name: "Code coverage"
        runs-on: ubuntu-latest

        defaults:
            run:
                # See https://github.com/mamba-org/setup-micromamba?tab=readme-ov-file#about-login-shells
                shell: bash -leo pipefail {0}

        steps:
            - name: "Checkout sources"
              uses: actions/checkout@v4
              with:
                  submodules: recursive

            - name: "Install Conda environment with Micromamba"
              uses: mamba-org/setup-micromamba@v1
              with:
                  micromamba-version: '1.5.8-0'
                  environment-name: coverage
                  create-args: >-
                      python=3.10
                      coverage
                      numpy
                      pinocchio>=2.6.4
                      qpsolvers>=2.7.2
                      quadprog>=0.1.11
                      robot_descriptions>=1.9.0
                  cache-environment: true
                  post-cleanup: 'all'

            - name: "Install PyPI dependencies"
              run: |
                  python -m pip install coveralls

            - name: "Run coverage tests"
              run: |
                  coverage erase
                  coverage run -m unittest discover --failfast
                  coverage report --include="pink/*"

            - name: "Coveralls"
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  coveralls --service=github

    lint:
        name: "Code style"
        runs-on: ubuntu-latest

        steps:
            - name: "Checkout sources"
              uses: actions/checkout@v4

            - name: "Set up Python"
              uses: actions/setup-python@v4
              with:
                  python-version: "3.9"

            - name: "Install dependencies"
              run: |
                  python -m pip install --upgrade pip
                  # tox version: https://github.com/tox-dev/tox/issues/2778
                  python -m pip install tox==3.28.0

            - name: "Check code format"
              run: |
                  tox -e lint

    test:
        name: "Test ${{ matrix.os }} with Python ${{ matrix.python-version }}"
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                os: [ubuntu-latest]
                # Blocker: https://github.com/stack-of-tasks/pinocchio/issues/2231
                # os: [ubuntu-latest, macos-latest]
                python-version: ["3.9", "3.10", "3.11", "3.12"]

        steps:
            - name: "Checkout sources"
              uses: actions/checkout@v4

            - name: "Set up Python ${{ matrix.python-version }}"
              uses: actions/setup-python@v4
              with:
                  python-version: "${{ matrix.python-version }}"

            - name: "Install dependencies"
              run: |
                  python -m pip install --upgrade pip
                  # tox version: https://github.com/tox-dev/tox/issues/2778
                  python -m pip install tox==3.28.0 tox-gh-actions

            - name: "Test with tox for ${{ matrix.os }}"
              run: |
                  tox
              env:
                  PLATFORM: ${{ matrix.os }}

    ci_success:
        name: "CI success"
        runs-on: ubuntu-latest
        needs: [coverage, lint, test]
        steps:
            - run: echo "CI workflow completed successfully"
